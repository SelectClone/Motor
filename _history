{"entries":[{"timestamp":1759249704612,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":1721,"diffs":[[1,""]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":0,"diffs":[[1,"/**\n * Controle de motores para placa driver micro:bit\n */\n//% weight=100 color=#00A654 icon=\"\\uf1b9\"\nnamespace MotorDriver {\n    \n    // Motores: M1 (P8, P12), M2 (P0, P16)\n    \n    //% block=\"Motor M1 velocidade %speed\"\n    //% speed.min=-100 speed.max=100\n    export function motorM1Run(speed: number): void {\n        if (speed > 0) {\n            pins.digitalWritePin(DigitalPin.P8, 1)\n            pins.analogWritePin(AnalogPin.P12, pins.map(speed, 0, 100, 0, 1023))\n        } else if (speed < 0) {\n            pins.digitalWritePin(DigitalPin.P8, 0)\n            pins.analogWritePin(AnalogPin.P12, pins.map(-speed, 0, 100, 0, 1023))\n        } else {\n            pins.analogWritePin(AnalogPin.P12, 0)\n        }\n    }\n"]]},{"start1":719,"length1":0,"diffs":[[1,"    //% block=\"Motor M2 velocidade %speed\"\n    //% speed.min=-100 speed.max=100\n    export function motorM2Run(speed: number): void {\n        if (speed > 0) {\n            pins.digitalWritePin(DigitalPin.P0, 1)\n            pins.analogWritePin(AnalogPin.P16, pins.map(speed, 0, 100, 0, 1023))\n        } else if (speed < 0) {\n            pins.digitalWritePin(DigitalPin.P0, 0)\n            pins.analogWritePin(AnalogPin.P16, pins.map(-speed, 0, 100, 0, 1023))\n        } else {\n            pins.analogWritePin(AnalogPin.P16, 0)\n        }\n    }\n}\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":227,"length1":35,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1759249796280,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"typescript_statement\" disabled-reasons=\"pxt_automatic_disabled\" x=\"0\" y=\"0\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"namespace MotorDriver {\" line1=\"    \" line2=\"    // Motores: M1 (P8, P12), M2 (P0, P16)\" line3=\"    \" line4=\"    //% block=&quot;Motor M1 velocidade %speed&quot;\" line5=\"    //% speed.min=-100 speed.max=100\" line6=\"    export function motorM1Run(speed: number): void {\" line7=\"        if (speed &gt; 0) {\" line8=\"            pins.digitalWritePin(DigitalPin.P8, 1)\" line9=\"            pins.analogWritePin(AnalogPin.P12, pins.map(speed, 0, 100, 0, 1023))\" line10=\"        } else if (speed &lt; 0) {\" line11=\"            pins.digitalWritePin(DigitalPin.P8, 0)\" line12=\"            pins.analogWritePin(AnalogPin.P12, pins.map(-speed, 0, 100, 0, 1023))\" line13=\"        } else {\" line14=\"            pins.analogWritePin(AnalogPin.P12, 0)\" line15=\"        }\" line16=\"    }\" line17=\"\" line18=\"    //% block=&quot;Motor M2 velocidade %speed&quot;\" line19=\"    //% speed.min=-100 speed.max=100\" line20=\"    export function motorM2Run(speed: number): void {\" line21=\"        if (speed &gt; 0) {\" line22=\"            pins.digitalWritePin(DigitalPin.P0, 1)\" line23=\"            pins.analogWritePin(AnalogPin.P16, pins.map(speed, 0, 100, 0, 1023))\" line24=\"        } else if (speed &lt; 0) {\" line25=\"            pins.digitalWritePin(DigitalPin.P0, 0)\" line26=\"            pins.analogWritePin(AnalogPin.P16, pins.map(-speed, 0, 100, 0, 1023))\" line27=\"        } else {\" line28=\"            pins.analogWritePin(AnalogPin.P16, 0)\" line29=\"        }\" line30=\"    }\" line31=\"}\" numlines=\"32\"></mutation></block></xml>"]]}]}]},{"timestamp":1759250969011,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":227,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// testes vão aqui; isto não será compilado quando este pacote for usado como uma extensão.\n"}]}],"snapshots":[{"timestamp":1759249704611,"editorVersion":"8.0.16","text":{"main.blocks":"","main.ts":"/**\n * Controle de motores para placa driver micro:bit\n */\n//% weight=100 color=#00A654 icon=\"\\uf1b9\"\nnamespace MotorDriver {\n    \n    // Motores: M1 (P8, P12), M2 (P0, P16)\n    \n    //% block=\"Motor M1 velocidade %speed\"\n    //% speed.min=-100 speed.max=100\n    export function motorM1Run(speed: number): void {\n        if (speed > 0) {\n            pins.digitalWritePin(DigitalPin.P8, 1)\n            pins.analogWritePin(AnalogPin.P12, pins.map(speed, 0, 100, 0, 1023))\n        } else if (speed < 0) {\n            pins.digitalWritePin(DigitalPin.P8, 0)\n            pins.analogWritePin(AnalogPin.P12, pins.map(-speed, 0, 100, 0, 1023))\n        } else {\n            pins.analogWritePin(AnalogPin.P12, 0)\n        }\n    }\n\n    //% block=\"Motor M2 velocidade %speed\"\n    //% speed.min=-100 speed.max=100\n    export function motorM2Run(speed: number): void {\n        if (speed > 0) {\n            pins.digitalWritePin(DigitalPin.P0, 1)\n            pins.analogWritePin(AnalogPin.P16, pins.map(speed, 0, 100, 0, 1023))\n        } else if (speed < 0) {\n            pins.digitalWritePin(DigitalPin.P0, 0)\n            pins.analogWritePin(AnalogPin.P16, pins.map(-speed, 0, 100, 0, 1023))\n        } else {\n            pins.analogWritePin(AnalogPin.P16, 0)\n        }\n    }\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"main\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1759250969015}